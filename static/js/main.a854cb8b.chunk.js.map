{"version":3,"sources":["utils/index.js","components/Modal/index.js","utils/clickOutside.js","components/Card/index.js","App.js","index.js"],"names":["cap1stLetter","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","props","ref","useRef","useState","showModal","setShowModal","selectColor","setSelectColor","useEffect","handleShow","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","ClickOutside","id","style","backgroundColor","color","year","name","pantone_value","data","title","className","key","onClick","fontWeight","fontSize","App","colorArr","setColorArr","loading","setLoading","fetch","then","response","json","result","catch","err","console","log","map","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"4RAGaA,G,MAAe,SAACC,GACzB,OAAOA,EAAIC,QAAQ,UAAU,SAACC,GAAU,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGC,mBCEhF,G,MAAA,SAACC,GACZ,IAAMC,EAAMC,mBADU,EAIYC,oBAAS,GAJrB,mBAIfC,EAJe,KAIJC,EAJI,OAKgBF,mBAAS,IALzB,mBAKfG,EALe,KAKFC,EALE,KAOtBC,qBAAU,WACFR,EAAMM,aACNC,EAAeP,EAAMM,eAE1B,CAACN,EAAMM,cAEVE,qBAAU,WACFR,EAAMI,WACNK,MAEL,CAACT,EAAMI,YAGd,IAAMK,EAAa,kBAAMJ,GAAa,IAGtC,OCzBe,SAACJ,EAAKS,GAEjB,IAAMC,EAAW,SAAAC,GACRX,EAAIY,UAAWZ,EAAIY,QAAQC,SAASF,EAAMG,SAG/CL,EAAQE,IAGZJ,qBAAU,WAIN,OAHAQ,SAASC,iBAAiB,QAASN,GACnCK,SAASC,iBAAiB,YAAaN,GAEhC,WACHK,SAASE,oBAAoB,QAASP,GACtCK,SAASE,oBAAoB,YAAaP,MAE/C,CAACV,EAAKS,IDMbS,CAAalB,GAAK,kBAAMI,GAAa,MAGjC,6BACKD,EACG,yBAAKH,IAAKA,EAAKmB,GAAG,QAAQC,MAAO,CAAEC,gBAAiBhB,EAAYiB,QAC5D,+DAAqCjB,EAAYkB,KAAjD,OAA2DhC,EAAac,EAAYmB,MAApF,KACA,0CAAgBnB,EAAYoB,eAC5B,yCAAepB,EAAYiB,QAG3B,iCEhCD,G,MAAA,SAACvB,GAAU,MAEYG,oBAAS,GAFrB,mBAEfC,EAFe,KAEJC,EAFI,OAQmBL,EAAM2B,KAAzCF,EARgB,EAQhBA,KAAMF,EARU,EAQVA,MAAOH,EARG,EAQHA,GAAIM,EARD,EAQCA,cAGnBE,EAAQpC,EAAaiC,GAEzB,OACI,oCACI,4BACII,UAAU,OACVC,IAAKV,EACLC,MAAO,CAAEC,gBAAiBC,GAC1BQ,QAAS,WAdiB1B,GAAZD,KAqBd,yBAAKiB,MAAO,CAAEW,WAAY,IAAKC,SAAU,UAAYL,GACrD,mDAAwB,6BAAOF,IAEnC,kBAAC,EAAD,CAAOtB,UAAWA,EAAWE,YAAaN,EAAM2B,UCI7CO,EAlCH,WACV,IADgB,EAIgB/B,mBAAS,IAJzB,mBAITgC,EAJS,KAICC,EAJD,OAKcjC,oBAAS,GALvB,mBAKTkC,EALS,KAKAC,EALA,KAoBhB,OAZA9B,qBAAU,WACH6B,GACHE,MATQ,6CAULC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJP,EAAYO,EAAOhB,MACnBW,GAAW,MAEZM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE7B,CAACR,IAGF,oCACE,uEACA,yBAAKjB,GAAG,kBACLe,EAASa,KAAI,SAAAzB,GAAK,OACjB,kBAAC,EAAD,CAAMO,IAAKP,EAAMH,GACfO,KAAMJ,QAGZ,qDAA0B,uBAAG0B,KAAK,+BAAR,oBC7BhCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpC,SAASqC,eAAe,W","file":"static/js/main.a854cb8b.chunk.js","sourcesContent":["import React from 'react';\n\n// Hook to capitalize the first letter of each word\nexport const cap1stLetter = (str) => {\n    return str.replace(/\\w\\S*/g, (txt) => { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n}","import React, { useState, useEffect, useRef } from 'react';\nimport ClickOutside from '../../utils/clickOutside';\nimport {cap1stLetter} from '../../utils';\nimport './index.css';\n\n// Modal Component\nexport default (props) => {\n    const ref = useRef();\n\n    // sets the state for the Modal and Color selected\n    const [showModal, setShowModal] = useState(false);\n    const [selectColor, setSelectColor] = useState({});\n\n    useEffect(() => {\n        if (props.selectColor) {\n            setSelectColor(props.selectColor);\n        }\n    }, [props.selectColor])\n\n    useEffect(() => {\n        if (props.showModal) {\n            handleShow();\n        }\n    }, [props.showModal])\n\n// Handlers for Showing Modal, Closing Modal\nconst handleShow = () => setShowModal(true);\nClickOutside(ref, () => setShowModal(false));\n\nreturn (\n    <div>\n        {showModal ? (\n            <div ref={ref} id=\"Modal\" style={{ backgroundColor: selectColor.color }} >\n                <p>The Pantone color of the year in {selectColor.year} is {cap1stLetter(selectColor.name)}.</p>\n                <p>Pantone ID: {selectColor.pantone_value}</p>\n                <p>Hex Color: {selectColor.color}</p>\n            </div>\n        ) : (\n                <div></div>\n            )}\n    </div>\n)\n}","import { useEffect } from 'react';\n\n\n// Hook for listener on click outside of target\nexport default (ref, handler) => {\n\n    const listener = event => {\n        if (!ref.current || ref.current.contains(event.target)) {\n            return;\n        }\n        handler(event);\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', listener);\n        document.addEventListener('mousedown', listener);\n\n        return () => {\n            document.removeEventListener('click', listener);\n            document.removeEventListener('mousedown', listener);\n        };\n    }, [ref, handler])\n}","import React, { useState } from 'react';\nimport {cap1stLetter} from '../../utils';\nimport Modal from '../../components/Modal';\nimport './index.css';\n\n// Card Component displaying colors\nexport default (props) => {\n    // sets state for the modal\n    const [showModal, setShowModal] = useState(false);\n\n    // function that toggles modal state\n    const toggleModal = () => showModal ? setShowModal(false) : setShowModal(true);\n\n    // destructure the color object\n    let { name, color, id, pantone_value } = props.data\n\n    // sets title to the name of the color capitalizing the first letter\n    let title = cap1stLetter(name);\n\n    return (\n        <>\n            <button\n                className=\"card\"\n                key={id}\n                style={{ backgroundColor: color }}\n                onClick={() => {\n                    toggleModal();\n                    // console.log(`Show Modal ${name}`);\n                    // console.log(showModal);\n\n                }}\n            >\n                <div style={{ fontWeight: 600, fontSize: \"large\" }}>{title}</div>\n                <div>Pantone Color Value<br />{pantone_value}</div>\n            </button>\n            <Modal showModal={showModal} selectColor={props.data} />\n        </>\n    )\n}\n\n","import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport Card from './components/Card';\n\n\nconst App = () => {\n  const url = 'https://reqres.in/api/unknown?per_page=12'\n\n  // set state for the json API colors\n  const [colorArr, setColorArr] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Loads the colors for the URL API to colorArr using state\n  useEffect(() => {\n    if (!loading) {\n      fetch(url)\n        .then(response => response.json())\n        .then(result => {\n          setColorArr(result.data);\n          setLoading(true);\n        })\n        .catch(err => console.log(err));\n    }\n  }, [loading])\n\n  return (\n    <>\n      <header>Colors of the year from 2000 - 2011</header>\n      <div id=\"cardsContainer\">\n        {colorArr.map(color => (\n          <Card key={color.id}\n            data={color}\n          />))}\n      </div>\n      <footer>Brought to you by <a href=\"https://chindowns.github.io\">Michael Downs</a></footer>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}